<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA3GgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgCAAAA0xA/MQAAGf5J
        REFUeNrtnXmQVtWZxvuec+720Xf5NkxZmZRlUiaRaNRYyeSPSaUqlclkMZo4M5Upa6bKsSpVxqlkMmNl
        akZsFJFVaPZG1qaBbhqapgExgApmccElGuMaxQUQZFFxSf7NnPuevtfb9Nfb1/eez9DPU7csIMB3O5xf
        3+d5z/ue29QEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
        QRAEQRAEQRAEQRAEQRAEQRAEQRCUgVhTk9B4sXy+CqOpiWu8DKybc0PGOfGhxoT5vw7K+Hu/1KVM/LdZ
        +Ilw/yPnS36E/KCLmWjK9DmgFuJ5BvtHbl/NrGu4neslP+KfuH2hwcHAX704/fc64fylMPmDQvVPOV/v
        F6p/KZy3yvKSj84Q4y8z8YhdvM8KH8j52meFj9nFH3I7268CahgA/8DtV93yYbfyRs7X627lTbfyglMu
        GyzDb58KgCuY+KUV9FhBb86X/AjJwHeZBQDOEQC+ze0n7NIxt3KUFmiul8RMPmr+OdNvnwqALzEh1+V2
        K9iR8yUZkM+B73EAcK4AcBW377PDQ075mBYApBHaaPkZxgAAAI0LgKu5vdsKD9qlk/k/BOTff9ytvOaW
        P0kuiAEAqOEAfJ/be+xwpxW+pcUFyTAgA/ENwm2ibQEAADXaAjFrv13sMINXnPLx/AE44lbOuNUddpBV
        DgYA0LgA+B6zHrSL7ab/kF08qeUhoK7PUimdAQCo4QAcsItdVrDNjFzQm7pc0M9FIRMXBACg8QIgLVCv
        HawV/otOWUMSkC7oHbd6vx2iCgR9LAB4wA532OEa0z9gFU9pcUHyI6TduiKLtggAAGUDwCYzkNcxjS5o
        mjlp/C4IAEDjA4BbD9DS2WYFbcJ/1imf0OKCTrvVR5yiSfdgAACosQD00r/uCuHvsUI9Lkgy8K5b/Roz
        x7mSAACUGQDrTV9GYT2V0MNu5cNCdb7ZDACgjwsA3VawiPtP6WqLkJ/ytFNqJgdkAACo4QDI/y4R/g5T
        kwuKeuPc6nfHt5gAAJQZAHIBrTF9mQTk0jymqzt65fhGZAAAlBkAfVZUCZ3Pvcd0uaC33MpLTrk6jhEZ
        AABlBoC8tsgYILytZqDNBcko/CPu1L2eAACUJQA9VrBS+Eu4/5qW5lAJwHtutWscIzIAAMoSAPmDDjOY
        x72HbB1tEUcpbLzuVj5Vb3MoAICyBECuoS4zaOW+DAMnNY7I/LjeERkAAGUJgNoNuFv4rdx7mVzQUS0j
        MrvqHZEBAFDGAMgY0G4Gc7hHzaFVPRvD0gh9ri4XBACgjAHYZgUbzGAB99pFcEKjC7q5rhEZAABlDIBc
        Rp1m1Bkqo/ALGkdk9tc1IgMAoIwB6KMYsMb0Z3Fvr1U87VaPaBmROe1Wrhz7iAwAgDIGQF5bKQZIF7RS
        +Mc1jshMH/uIDACAsgdAxYDlwp/NvWc0jsgcdIoW3ZUBAKAGAtBLMWCV8Gdyb6cZ6nFBakTm62M8dxYA
        QNkDsJ1iwFrTX8D9ZVzriEzrGEdkAACUPQB9FAPWm8Ey4d/JvCc1jsg845T8sYzIAAAoewDUdthGM2qM
        kwD0RC5I34jM98dyfjoAgHIBYBvFgNXCn8+9hdx/Q+OIzGpqDgUAUCMBSGLAUuFPZ96jdumUrhGZl53y
        5FGPyAAAKC8AtlAMaCMX1Cm0jshcRyMyAgBAjQKgLxUDpAuax71XNY7IdFNzKAMAUKMAUDGgy4piwBLh
        3868X1v6RmQkBheMrjkUAEB5AdBLMWCd6S8X/gwWNYfqHJG5cXQjMgAAygsAFQM6zOjIxLu4N5t5f9TV
        HPquW91NzaEGAIAaCEAPHZSySviLhX8ba77fKp4u6GiLeJPKQVNG0RyaALAXAEDZAqBycBcVQ9WW8Coe
        6HyX3v+MYkQGAEB5AaBycDcdmttGLkgmged1uaC33eqv7OLoLdAeAABlDkAvNQWpYugi7k9jzfea4elC
        RdeITPUrI52frgC4AgBAeQCgYkDUE0FbwtIFLeO+zrfIzBhpRCYB4JdDfxUAAKoTgD5yQZvjYqh0QdOZ
        93u7dELLhsApt/q4U7KHbQ4FAFCOAKgYkBRDlQvaTs2hekZkzrjVbwy72hIA7rXCbQAAyhyAJAasoi1h
        6YIW6h2RWTzs+elnAdAHAKBsAdhOACTFUOmCpjHvCV0jMtJrPeuUQmNIF5QAsNsKewAAlDkAajdgc3RO
        RFQMld/+W1hzt8YRmQ8K1WuGHpE5C4DtAADKHAAVAzbExVDpgu7SOyKzbugRGQXA5UzcY4VbCYA+AABl
        CEASAzbRgNhSOjGuhXkP6xqROe5WXnHLnxhiRCYBYBcB0AsAoJwAUDFgOR0cLV3QRr0jMv8mao/IpAHY
        Qg+rXB8CAGAiAqC2w6gnIiqGLiQXNJt5hzSOyPQMMSKTALAzBqAXAEDZAqBysIoBqhgqXdCtzHswOjlU
        04jMEbfy6VojMmkAuuk+e/OMwgBgggKwLY4Ba6gYOp+KoWv1jsjcVGtERgFwGRM7BgLQBwCgrABIx4B1
        9CLhVu7PZFFz6EsaR2T21BqR6QfAEH1WuJluMlcXBAAmKABJDOhQxVByQVNZ8z5yQXqaQyVplwwakVE/
        /qIhes1+AHJ1QQBgQgOwhXoiVGeockEr9I7I/J959ohMAsA2M+yiO+zJsxYEACYoAEkM6DSjYmhb7IJu
        Z95zus5Pf9ut/sYuqhVvDATgUkNsNcNOAiBXFwQAJi4AvXFPxHozeo3kIh65oFtY8z26RmQUA18dOCKT
        ALDFDOXTqTtnFwQAJigA6RigiqFLqTHuNuYt0TsiM4vOTxeDAOg2oxvbnLMLAgATGgDVFKSKoctF9PYA
        6YJkEnhaV3PoKbf6pFNyUyMyCoBLDNFlRgG9K2cXBAAmLgBJDEiKoQu5P1e6IMPr1TUio3aF/z61/hIA
        ZDhpN6OIkqsLAgATGgC1G6BiwMp4S1jmYPkoOKKrOfTDQnVZakQmAUAGgHVmVKQ6ywUBACgbAHbEOVjF
        gNXxlvAsFrVFPKZxROZ5p1yMR2QUAF8wxAYRlafkjUkvlJ8LAgATGoBkN2BTXAyVLmgOuaDNGl3QB4Xq
        tfGITALAehEx2ZGzCwIAExqAdAxop2LoYhHFAOmC5jL/dV0u6P1CtYNGZFgMwBRDtItglem35+yCAMBE
        ByCJAR1xMVS5oKmG95DGEZlDbvl8GpHhMQDrRBRL1g1yQdkWQwEAAOiPARvjYmgruaCpzOvQNSKjNgSu
        pxEZk76Kiw2xRkSzCmvJBW0a6IIAAJQNAOkY0Gn2F0MXUTF0OvNmMu8VGpE5mr8LOuNWt9OIDI8BWCWi
        tzmtztkFAQAAMCAGqGLoXeSCZBQ+oKs59Bhh9hmjfxFKAO4WgXwcrcrZBQGAiQ5AkoNVDFgtomLoAnJB
        tzJvtd4RmZ/R+elSnzfEChHIQLIyZxcEAADAgBiQFEOlC7qDRdeLukZk3nGr+2hERgGwnEfPohW1XFCG
        xVAAMNEBSLbD1G7AurgYGrkg2hDYq3FERj5tLqcRGWmBlvJoTKdtaBcEAKBsAPgoBphRT8SqlAtqYV4b
        93WOyLTQ+elTDLGYR/UoeScSyDWmvz4fFwQAAMCAGLCBiqGJC5pBIzLP6hqROe1WH3aK8qu4yBCLuD+f
        R/sSubogAAAAasSAFQNcUPOuaESmqu389CuZOL+JyyeAvIHFObsgAAAAPgJA7QaoYujS2AVNY55ci2/q
        GpH5c2HyHeak85qY2o5YOIQLyqoxDgAAgLN3A1QxdHnsgu6kEZmndDWHShf0iFO8zDDnME/ityCpBYka
        LggAQBkDoGJA2gXNplrQNl0uSNWCfsoLU1mzxG8+uaDBO2JZbQkDAABwdgygYqifdkE6R2RUFN5rhTJ7
        SPbmDeuCxr8lDAAAQI0YoIqhiQuaSSMyB7U0h6q2iNedyhzahpubdkGpWlBWxVAAAABqx4A1A13QVMPr
        EoGet8jQsHylUwS3UgyQN7CIaPyoOzq7GAAAAECNGEDzuJHrSFzQ9GhExnvNKR/TBcCjdkkCMItFLqiV
        NgSUC0rPiI0/BgAAAFA7BrSnXNA8NSLDvN9qdEGH3cp87t9+lgsSGbsgAAAAhowBq2lLeDHNiKnm0PW6
        mkMpCld6zFBar34XxHNxQQAAAAxXDFUuqDVuDtU2IqOKob+zS9PoQ+fWckGZbAkDAABQAwDVE9Fu+gNc
        EG0I7NfVHKquxdy/LbUj1ha7oE0ZxQAAAADG4IJaaETmhEYXtJNc0OxaLiiTGAAAAEBtAFQx9CwXNINq
        8y9oGZFRZ2b9wSnLHHzn0C4IAECZAVCzGKpckDo8XbVF7NHogmTeaOP+NHJBqi1C7Yitz8gFAQAAMGQM
        2FTLBcm1uJz7x7WsfuWCJG+3kAuaF7sg1ReUFEMBAJQZAGfFALUlnHZBd9KIzB+0jMio94i96JTvoBf4
        pV2QmpQffzEUAACA2gAkxVDVGKdcUNIWsUPXyaEqCcjk3ZJyQW2xCxp/DAAAAGAEF9RO4wHKBam2iNs0
        jsgoF7SfXNCsuDlUuaB2ckHjjAEAAAAMCcBQLki9ReZ3ukZkZN54xSnPjJtD0y5ow7hjAAAAACMUQwe7
        oDnkgno0uiBJ2vq4OTRbFwQAAMAIMWBjygUtIRekzk+fz/3DWkZkVHPob+3S1Lg5NOWC+ouhAADKDICz
        YsBgFzQvfovMoxqbQ19zK3NZ1JWt2iKUC1o37hgAAADAGF2Q6HdBEoBOXeen07B8pUsESVuE2hFbExdD
        AQCUCwADXBDNiCUuSEbSOcx73dHngg7SiIxqDk1c0DhjAAAAALUBGLwlrFzQsrg5lNoimvdaMgpX9Zyf
        Lj9lQao5dGncGDeeGAAAAMBwMaDfBZn9Lkj1Bam2iLnRW2Saf8oL+kZkCtVtZnjLQBc0zmIoAAAAI8eA
        dC0ocUHy27C0QJcZ5iNOUT4E9IzIPEUjMnemXJC8pfHEAAAAAIYDYBgXpJbgeU3sDnPSnwuT39A4IjNt
        oAtqH0cMAAAAYFRbwmkX1BYflyLX4vlN/Eomzriajs6VLmhX5IKaZw10QRvrjQEAAAAMB0ANF0S1IHqb
        arQxfJERvc/iYXJBR7Q0xj1LIzIzYhfURsXQdAwAAAAgGwDSxdDBLqiV+/IJMIUAaDEn/alQfUNLPfQt
        GpFpiV3QsrgYKp9RdcQAAAAA6nRBi+RzgPsXEwCXM6HzuJS9cXOockG0JRzxmcQAAAAAMgNgKBe0RPjL
        uf95AkBqnx2+o8UFJSMyd6RcUN0xAAAAgLG5IDUpr86OXiGCBICfiYI2F3SSRmRuTbkgVQytIwYAAAAw
        2i3hwTtid4vg4hiAzxj8qL7z0ysHlAtikQtaEhdD69gNAAAAYAxbwmkXRK/u6gdAfXSvHZxxq4d1jcjM
        oubQuTQpv4J6IpLdAAAAADIDYCgXFDVjxgCY9NHXC0ebCzrlVjpEMJVcUCttCa+pKwYAAAAwhi3htAuK
        GtFEMCX1BDjfYIdcTSeHSgAesktTYxe0lIqhSQwAAAAgMwCGckGrTL89BoDRJdVh+e8XcndB/W+RcStz
        6fz0eXExNB0DAAAAyBKAtAtSM2LRSK4IvhADoD79Wm5/oAUAFYU3U3PonFQxdNMYYwAAAAB1uqCoDzkF
        gEGfXjSM53SdmXXSrTwWv0VmPveW0Zj8hlQMAAAAIEcXtI7e1HJJDEByA8ss70NdLkiNyCgXpIqh68cY
        AwAAAKjTBakm5MEAfJNb77n6XFAvuSC1JayKoWOKAQAAANTlgujw9K6BACgX5DYZTzqlU7pGZJ6O3yKz
        IC6Gqhgwyu0wAAAAxrYlnLigyG2bwaUpAKTUtvAss1nPhoAyQktoUDgphiYxAAAAgBxdkAwAW8zwLADU
        PXyVmW9rG5FxK/eYxVtYs9oSvjuOAaPcDgMAAKBOF9QpfzAIAOWC5E9/Yxff1jUi85xTnk4uqDUuhnaa
        o40BAAAA1OmCZAzYZoZfHAhA4oL+1yzoHJFZwYNpVAxdSsXQjaPeDQAAAKBOFyRtRm8tANSPL2HiLY0j
        Mvus4lTWrLaEV1JPRDcAAAC5uqDN0U/DywYBkBihPXb4rq4RmZec8ozYBaWLob0AAABk7oLUQ6A7+pXw
        MlYDAOWCbhKuzhGZtaLfBS2Li6GjiQEAAADU6YIkADut8PJaAKifXmjwI1SmPKrl6NwHreKt8ZawKoaq
        GAAAAEAuLmjL0AAkv9JjB3p2hY+7lUNOeTYdGrcwLoaOJgYAAABQZy1IArBraACUC/pX4ejpC1ITAhvp
        XXqt3FtOxdDRxAAAAADqfAhsHRYAlYM/YbBXNI7IPGyXWsgFLaUxeRUDAAAAyAuAe4YGILmfdZb/ga7m
        UBm47+L+nfQSy5VxDBg+BwMAAFBnFJb2ercVXjESANfoHZHpNsMW1qzmY9pNf/NIORgAAIA6HwIjAqBc
        UGAYzzolbSMyT1Bz6F1UDE1iwHYAAAAyB0Bai3uHBSC5pcW6RmQUBgvJBali6MaRYgAAAAB1XqMH4Bvc
        OqOxObTPDKexZtUZ2hHHAAAAADK+5Ef8ciQAlAuym4zHdY3ISK/1e7s0nVzQcuqJ2DxsDgYAACBHAJIN
        gRm6zk9X5aBl5IJUZ2inOdx2GAAAAPUXgvaMAgB1V19hpob3iCVvkbk3dkErR4oBAAAAjAuAL40EQOKF
        fqVrROYtt/I8NYdKF9QW9UT43UPHAAAAAOoHYO/oAFAu6BdC64jMKhFIF5QUQ4faDQAAACB3ANT/OoWJ
        41oyALmgyv1W8TbWvJiKoZuGjgEAAADUD8C+sVggqd0aR2T+SM2h0gWtiIuhAAAANAwA5YJu1Dsi0y4C
        mQRUMbR7iBwMAACADgDUb7jA4Id1jcicciu/toq305bwahHFgG0AAAA0CoDk93RrHJF51SnP49GQ5Mo4
        BvQBAADQKACUC7qOax2R6aRa0DAxAAAAAE0AqBw82WAynr6lywU9apfuoC1hFQMAAABoGADJHa7WOyKz
        kPvSBckY0GnWiAEAAADoBuAqbr/vanJBp91KjxlKF6R6InoAAABoIADKBXlNxjNO6aSuEZkn7ZLaEl5P
        TUF9AAAANAqA5CZbzWadIzLLuL+ARz0Rg2MAAAAADQDg60zniEx1pxnO5N4qigG9AAAANBAA5YLkcnvU
        KZ7WdX76M055Ns3HbBiUgwEAANAKQLIhMF3jiMxxtyJD8ALutVMMAAAAoJEAqN98JROn9Z2fXt1rFWdx
        bw3FgD4AAAAaCECi/Xb4jq7m0BeoLWIFxYDtAAAANBYA5YJu1jgic4KaQ1u5d1YMAAAAoAEAqN//OYMf
        01UJPeVWD1jFORQDegAAAGi4BVLloF12cEaLC5I5+GWnvJB7dwu/GwAAgIYDoFzQj/WOyMgAsJD7XakY
        AAAAQGMAUH/kUwZ/XeP56Q/ZRRmFO1LbYQAAADSsCqT+VJftaxuRec0pL6HDgnoAAABoOADqhn+kd0Rm
        qxksEt4WAAAAGg6AysFVg72ka0RGxoDH7NJ87m0y+7fDAAAAaBgAyT2vtDxtIzLyU1bQe1S3AwAA8DEB
        4Dvc0jYiI13QDjNcIvxeAAAAGg6AckHNTcbTGkdknrJLi3j/bgAAAACNBCC57btoROYNXRvDa+nQXAAA
        AD4uAHyNme9qGZFRLmiPVZRJAAAAgMYDoFyQ2dT0iMYRmWedcpvwt9FXAQAAQCMBaIrbIlr0vkVmkxnI
        a4cdPmCH32MAAAA0DgD1xy9n4qSWERnlgg5YxTUyBgAAANBwABLdr3FE5kWnLKNwrx3st4sAAAA0GADl
        gn6u9y0yvWbYZQUHAAAAaDgA6m+4yOBv6qqEnqTm0HbTfxAAAICPgwVS5aAdWkZkVHPoK065w4ws0FUA
        AAA0HADlgm4Qjk4XtNMK99jh97kNAADAgKsvdW1PXb3x1RO9KDu4IjsA1F/ySYO96paP0MHO6etwfB2h
        62h8jdMFHbRLu63wagAw0QBIr+ze1LU9PjZnlxXcYwW76XXwe6xQfrO/zwrvt0L5l++nS/70Ybv45Uyr
        QOrv2Wz5fylMfs+tykfBn+mSP/iwUH2/UJW/+K5bfdutnnKrJ8jGqJN/FBtpVNKcDLMbcMgp32eHVwGA
        cxKAwatcre+dtLjvpfecqmW9n1b2/fRTueJ3RN/g/U7TX2t6babXajbPMie1iEk3i8JPuHs9d37Ebfld
        U2bHssES+54VAJ9j/N+Fc71wbhTuf4nCVHPSTLN5seWts/ytdrDbDmVsfdwpPeeUD7lluY4lDxKMD4mT
        BBXJyWmCRL2SLCEkwSNh40m79G0AcM4A8F1mye/W6uibe8il7Iu/cz/Qv74jBrosfzWt7NvEpP8U0Zq+
        ltvfZNbfMnOKIS4w+GSD+U2G02SMuCyMTL8KY3S/R95YaBjnG+yzBv8yM7/FrX/hzk3CbTEnLbKaN1m+
        dPYHneILTvkwbXu9736Ex3v0DDkRG6HX3DIAOHcA+CG3D9rF3fEqX2F6s8SkX4jCDdz5Abf/jpkXG1z6
        7KDJsMa4Lll88dRl5PCFMArE6Sv5ODaWT7SbDPmAutDgVzLxHW7dINxbzElLLG+LHchnyHNO6TDFAGm3
        rhMOAPirl1oZ8t/7W8y6xBB/Q6ucj2K1sYErjMXrzMhnfWfylSZX+uYTWkbz2lb5APm0wb/CzOu484VM
        kwzUYAZqfvNOr++P8+LOnJOE8OHxMLB6zpl/dZ5a5dDwbCgw8L0fgiAIgiAIgiAIgiAIgiAIgiAIgiAI
        giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgqCM9P+/+gAXPjGi
        AgAAAABJRU5ErkJggg==
</value>
  </data>
</root>